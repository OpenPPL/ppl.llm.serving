// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: llm.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_llm_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_llm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_llm_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_llm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_llm_2eproto;
namespace ppl {
namespace llm {
namespace proto {
class BatchedRequest;
struct BatchedRequestDefaultTypeInternal;
extern BatchedRequestDefaultTypeInternal _BatchedRequest_default_instance_;
class Request;
struct RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace proto
}  // namespace llm
}  // namespace ppl
PROTOBUF_NAMESPACE_OPEN
template <>
::ppl::llm::proto::BatchedRequest* Arena::CreateMaybeMessage<::ppl::llm::proto::BatchedRequest>(Arena*);
template <>
::ppl::llm::proto::Request* Arena::CreateMaybeMessage<::ppl::llm::proto::Request>(Arena*);
template <>
::ppl::llm::proto::Response* Arena::CreateMaybeMessage<::ppl::llm::proto::Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace ppl {
namespace llm {
namespace proto {
enum Status : int {
  PROCESSING = 0,
  FINISHED = 1,
  FAILED = 2,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Status_IsValid(int value);
constexpr Status Status_MIN = static_cast<Status>(0);
constexpr Status Status_MAX = static_cast<Status>(2);
constexpr int Status_ARRAYSIZE = 2 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
Status_descriptor();
template <typename T>
const std::string& Status_Name(T value) {
  static_assert(std::is_same<T, Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return Status_Name(static_cast<Status>(value));
}
template <>
inline const std::string& Status_Name(Status value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<Status_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Status_Parse(absl::string_view name, Status* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Status>(
      Status_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ppl.llm.proto.Request) */ {
 public:
  inline Request() : Request(nullptr) {}
  ~Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Request(const Request& from);
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request& operator=(Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }
  inline void Swap(Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Request& from) {
    Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ppl.llm.proto.Request";
  }
  protected:
  explicit Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPromptFieldNumber = 4,
    kIdFieldNumber = 1,
    kTemperatureFieldNumber = 2,
    kGenerationLengthFieldNumber = 3,
  };
  // string prompt = 4;
  void clear_prompt() ;
  const std::string& prompt() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prompt(Arg_&& arg, Args_... args);
  std::string* mutable_prompt();
  PROTOBUF_NODISCARD std::string* release_prompt();
  void set_allocated_prompt(std::string* ptr);

  private:
  const std::string& _internal_prompt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prompt(
      const std::string& value);
  std::string* _internal_mutable_prompt();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // float temperature = 2;
  void clear_temperature() ;
  float temperature() const;
  void set_temperature(float value);

  private:
  float _internal_temperature() const;
  void _internal_set_temperature(float value);

  public:
  // uint32 generation_length = 3;
  void clear_generation_length() ;
  ::uint32_t generation_length() const;
  void set_generation_length(::uint32_t value);

  private:
  ::uint32_t _internal_generation_length() const;
  void _internal_set_generation_length(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ppl.llm.proto.Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr prompt_;
    ::uint64_t id_;
    float temperature_;
    ::uint32_t generation_length_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llm_2eproto;
};// -------------------------------------------------------------------

class BatchedRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ppl.llm.proto.BatchedRequest) */ {
 public:
  inline BatchedRequest() : BatchedRequest(nullptr) {}
  ~BatchedRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BatchedRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BatchedRequest(const BatchedRequest& from);
  BatchedRequest(BatchedRequest&& from) noexcept
    : BatchedRequest() {
    *this = ::std::move(from);
  }

  inline BatchedRequest& operator=(const BatchedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchedRequest& operator=(BatchedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchedRequest* internal_default_instance() {
    return reinterpret_cast<const BatchedRequest*>(
               &_BatchedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BatchedRequest& a, BatchedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchedRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BatchedRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BatchedRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BatchedRequest& from) {
    BatchedRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchedRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ppl.llm.proto.BatchedRequest";
  }
  protected:
  explicit BatchedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 1,
  };
  // repeated .ppl.llm.proto.Request req = 1;
  int req_size() const;
  private:
  int _internal_req_size() const;

  public:
  void clear_req() ;
  ::ppl::llm::proto::Request* mutable_req(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ppl::llm::proto::Request >*
      mutable_req();
  private:
  const ::ppl::llm::proto::Request& _internal_req(int index) const;
  ::ppl::llm::proto::Request* _internal_add_req();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ppl::llm::proto::Request>& _internal_req() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ppl::llm::proto::Request>* _internal_mutable_req();
  public:
  const ::ppl::llm::proto::Request& req(int index) const;
  ::ppl::llm::proto::Request* add_req();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ppl::llm::proto::Request >&
      req() const;
  // @@protoc_insertion_point(class_scope:ppl.llm.proto.BatchedRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ppl::llm::proto::Request > req_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llm_2eproto;
};// -------------------------------------------------------------------

class Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ppl.llm.proto.Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Response(const Response& from);
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Response& from) {
    Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ppl.llm.proto.Response";
  }
  protected:
  explicit Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeneratedFieldNumber = 3,
    kIdFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string generated = 3;
  void clear_generated() ;
  const std::string& generated() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_generated(Arg_&& arg, Args_... args);
  std::string* mutable_generated();
  PROTOBUF_NODISCARD std::string* release_generated();
  void set_allocated_generated(std::string* ptr);

  private:
  const std::string& _internal_generated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_generated(
      const std::string& value);
  std::string* _internal_mutable_generated();

  public:
  // uint64 id = 2;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // .ppl.llm.proto.Status status = 1;
  void clear_status() ;
  ::ppl::llm::proto::Status status() const;
  void set_status(::ppl::llm::proto::Status value);

  private:
  ::ppl::llm::proto::Status _internal_status() const;
  void _internal_set_status(::ppl::llm::proto::Status value);

  public:
  // @@protoc_insertion_point(class_scope:ppl.llm.proto.Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr generated_;
    ::uint64_t id_;
    int status_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Request

// uint64 id = 1;
inline void Request::clear_id() {
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t Request::id() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Request.id)
  return _internal_id();
}
inline void Request::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Request.id)
}
inline ::uint64_t Request::_internal_id() const {
  return _impl_.id_;
}
inline void Request::_internal_set_id(::uint64_t value) {
  ;
  _impl_.id_ = value;
}

// float temperature = 2;
inline void Request::clear_temperature() {
  _impl_.temperature_ = 0;
}
inline float Request::temperature() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Request.temperature)
  return _internal_temperature();
}
inline void Request::set_temperature(float value) {
  _internal_set_temperature(value);
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Request.temperature)
}
inline float Request::_internal_temperature() const {
  return _impl_.temperature_;
}
inline void Request::_internal_set_temperature(float value) {
  ;
  _impl_.temperature_ = value;
}

// uint32 generation_length = 3;
inline void Request::clear_generation_length() {
  _impl_.generation_length_ = 0u;
}
inline ::uint32_t Request::generation_length() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Request.generation_length)
  return _internal_generation_length();
}
inline void Request::set_generation_length(::uint32_t value) {
  _internal_set_generation_length(value);
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Request.generation_length)
}
inline ::uint32_t Request::_internal_generation_length() const {
  return _impl_.generation_length_;
}
inline void Request::_internal_set_generation_length(::uint32_t value) {
  ;
  _impl_.generation_length_ = value;
}

// string prompt = 4;
inline void Request::clear_prompt() {
  _impl_.prompt_.ClearToEmpty();
}
inline const std::string& Request::prompt() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Request.prompt)
  return _internal_prompt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Request::set_prompt(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.prompt_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Request.prompt)
}
inline std::string* Request::mutable_prompt() {
  std::string* _s = _internal_mutable_prompt();
  // @@protoc_insertion_point(field_mutable:ppl.llm.proto.Request.prompt)
  return _s;
}
inline const std::string& Request::_internal_prompt() const {
  return _impl_.prompt_.Get();
}
inline void Request::_internal_set_prompt(const std::string& value) {
  ;


  _impl_.prompt_.Set(value, GetArenaForAllocation());
}
inline std::string* Request::_internal_mutable_prompt() {
  ;
  return _impl_.prompt_.Mutable( GetArenaForAllocation());
}
inline std::string* Request::release_prompt() {
  // @@protoc_insertion_point(field_release:ppl.llm.proto.Request.prompt)
  return _impl_.prompt_.Release();
}
inline void Request::set_allocated_prompt(std::string* value) {
  _impl_.prompt_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prompt_.IsDefault()) {
          _impl_.prompt_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ppl.llm.proto.Request.prompt)
}

// -------------------------------------------------------------------

// BatchedRequest

// repeated .ppl.llm.proto.Request req = 1;
inline int BatchedRequest::_internal_req_size() const {
  return _impl_.req_.size();
}
inline int BatchedRequest::req_size() const {
  return _internal_req_size();
}
inline void BatchedRequest::clear_req() {
  _internal_mutable_req()->Clear();
}
inline ::ppl::llm::proto::Request* BatchedRequest::mutable_req(int index) {
  // @@protoc_insertion_point(field_mutable:ppl.llm.proto.BatchedRequest.req)
  return _internal_mutable_req()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ppl::llm::proto::Request >*
BatchedRequest::mutable_req() {
  // @@protoc_insertion_point(field_mutable_list:ppl.llm.proto.BatchedRequest.req)
  return _internal_mutable_req();
}
inline const ::ppl::llm::proto::Request& BatchedRequest::_internal_req(int index) const {
  return _internal_req().Get(index);
}
inline const ::ppl::llm::proto::Request& BatchedRequest::req(int index) const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.BatchedRequest.req)
  return _internal_req(index);
}
inline ::ppl::llm::proto::Request* BatchedRequest::_internal_add_req() {
  return _internal_mutable_req()->Add();
}
inline ::ppl::llm::proto::Request* BatchedRequest::add_req() {
  ::ppl::llm::proto::Request* _add = _internal_add_req();
  // @@protoc_insertion_point(field_add:ppl.llm.proto.BatchedRequest.req)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ppl::llm::proto::Request >&
BatchedRequest::req() const {
  // @@protoc_insertion_point(field_list:ppl.llm.proto.BatchedRequest.req)
  return _internal_req();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ppl::llm::proto::Request>&
BatchedRequest::_internal_req() const {
  return _impl_.req_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::ppl::llm::proto::Request>*
BatchedRequest::_internal_mutable_req() {
  return &_impl_.req_;
}

// -------------------------------------------------------------------

// Response

// .ppl.llm.proto.Status status = 1;
inline void Response::clear_status() {
  _impl_.status_ = 0;
}
inline ::ppl::llm::proto::Status Response::status() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Response.status)
  return _internal_status();
}
inline void Response::set_status(::ppl::llm::proto::Status value) {
   _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Response.status)
}
inline ::ppl::llm::proto::Status Response::_internal_status() const {
  return static_cast<::ppl::llm::proto::Status>(_impl_.status_);
}
inline void Response::_internal_set_status(::ppl::llm::proto::Status value) {
  ;
  _impl_.status_ = value;
}

// uint64 id = 2;
inline void Response::clear_id() {
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t Response::id() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Response.id)
  return _internal_id();
}
inline void Response::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Response.id)
}
inline ::uint64_t Response::_internal_id() const {
  return _impl_.id_;
}
inline void Response::_internal_set_id(::uint64_t value) {
  ;
  _impl_.id_ = value;
}

// string generated = 3;
inline void Response::clear_generated() {
  _impl_.generated_.ClearToEmpty();
}
inline const std::string& Response::generated() const {
  // @@protoc_insertion_point(field_get:ppl.llm.proto.Response.generated)
  return _internal_generated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Response::set_generated(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.generated_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ppl.llm.proto.Response.generated)
}
inline std::string* Response::mutable_generated() {
  std::string* _s = _internal_mutable_generated();
  // @@protoc_insertion_point(field_mutable:ppl.llm.proto.Response.generated)
  return _s;
}
inline const std::string& Response::_internal_generated() const {
  return _impl_.generated_.Get();
}
inline void Response::_internal_set_generated(const std::string& value) {
  ;


  _impl_.generated_.Set(value, GetArenaForAllocation());
}
inline std::string* Response::_internal_mutable_generated() {
  ;
  return _impl_.generated_.Mutable( GetArenaForAllocation());
}
inline std::string* Response::release_generated() {
  // @@protoc_insertion_point(field_release:ppl.llm.proto.Response.generated)
  return _impl_.generated_.Release();
}
inline void Response::set_allocated_generated(std::string* value) {
  _impl_.generated_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.generated_.IsDefault()) {
          _impl_.generated_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ppl.llm.proto.Response.generated)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace llm
}  // namespace ppl


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::ppl::llm::proto::Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ppl::llm::proto::Status>() {
  return ::ppl::llm::proto::Status_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_llm_2eproto_2epb_2eh
